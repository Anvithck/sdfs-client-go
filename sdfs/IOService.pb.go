// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: IOService.proto

package sdfs

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DataWriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHandle int64  `protobuf:"varint,1,opt,name=fileHandle,proto3" json:"fileHandle,omitempty"`
	Start      int64  `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Len        int32  `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
	Data       []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataWriteRequest) Reset() {
	*x = DataWriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataWriteRequest) ProtoMessage() {}

func (x *DataWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataWriteRequest.ProtoReflect.Descriptor instead.
func (*DataWriteRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{0}
}

func (x *DataWriteRequest) GetFileHandle() int64 {
	if x != nil {
		return x.FileHandle
	}
	return 0
}

func (x *DataWriteRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *DataWriteRequest) GetLen() int32 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *DataWriteRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataWriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,2,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *DataWriteResponse) Reset() {
	*x = DataWriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataWriteResponse) ProtoMessage() {}

func (x *DataWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataWriteResponse.ProtoReflect.Descriptor instead.
func (*DataWriteResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{1}
}

func (x *DataWriteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DataWriteResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type MkDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *MkDirRequest) Reset() {
	*x = MkDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MkDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MkDirRequest) ProtoMessage() {}

func (x *MkDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MkDirRequest.ProtoReflect.Descriptor instead.
func (*MkDirRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{2}
}

func (x *MkDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type MkDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,2,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *MkDirResponse) Reset() {
	*x = MkDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MkDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MkDirResponse) ProtoMessage() {}

func (x *MkDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MkDirResponse.ProtoReflect.Descriptor instead.
func (*MkDirResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{3}
}

func (x *MkDirResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *MkDirResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type RmDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RmDirRequest) Reset() {
	*x = RmDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmDirRequest) ProtoMessage() {}

func (x *RmDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmDirRequest.ProtoReflect.Descriptor instead.
func (*RmDirRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{4}
}

func (x *RmDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RmDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,2,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *RmDirResponse) Reset() {
	*x = RmDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmDirResponse) ProtoMessage() {}

func (x *RmDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmDirResponse.ProtoReflect.Descriptor instead.
func (*RmDirResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{5}
}

func (x *RmDirResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RmDirResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type UnlinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *UnlinkRequest) Reset() {
	*x = UnlinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkRequest) ProtoMessage() {}

func (x *UnlinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkRequest.ProtoReflect.Descriptor instead.
func (*UnlinkRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{6}
}

func (x *UnlinkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type UnlinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,2,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *UnlinkResponse) Reset() {
	*x = UnlinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkResponse) ProtoMessage() {}

func (x *UnlinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkResponse.ProtoReflect.Descriptor instead.
func (*UnlinkResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{7}
}

func (x *UnlinkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *UnlinkResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type DataReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHandle int64 `protobuf:"varint,1,opt,name=fileHandle,proto3" json:"fileHandle,omitempty"`
	Start      int64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Len        int32 `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
}

func (x *DataReadRequest) Reset() {
	*x = DataReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataReadRequest) ProtoMessage() {}

func (x *DataReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataReadRequest.ProtoReflect.Descriptor instead.
func (*DataReadRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{8}
}

func (x *DataReadRequest) GetFileHandle() int64 {
	if x != nil {
		return x.FileHandle
	}
	return 0
}

func (x *DataReadRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *DataReadRequest) GetLen() int32 {
	if x != nil {
		return x.Len
	}
	return 0
}

type DataReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []byte     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Read      int32      `protobuf:"varint,2,opt,name=read,proto3" json:"read,omitempty"`
	Error     string     `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,4,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *DataReadResponse) Reset() {
	*x = DataReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataReadResponse) ProtoMessage() {}

func (x *DataReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataReadResponse.ProtoReflect.Descriptor instead.
func (*DataReadResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{9}
}

func (x *DataReadResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DataReadResponse) GetRead() int32 {
	if x != nil {
		return x.Read
	}
	return 0
}

func (x *DataReadResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DataReadResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type FileCloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHandle int64 `protobuf:"varint,1,opt,name=fileHandle,proto3" json:"fileHandle,omitempty"`
}

func (x *FileCloseRequest) Reset() {
	*x = FileCloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCloseRequest) ProtoMessage() {}

func (x *FileCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCloseRequest.ProtoReflect.Descriptor instead.
func (*FileCloseRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{10}
}

func (x *FileCloseRequest) GetFileHandle() int64 {
	if x != nil {
		return x.FileHandle
	}
	return 0
}

type FileCloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,2,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *FileCloseResponse) Reset() {
	*x = FileCloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCloseResponse) ProtoMessage() {}

func (x *FileCloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCloseResponse.ProtoReflect.Descriptor instead.
func (*FileCloseResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{11}
}

func (x *FileCloseResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FileCloseResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type MkNodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *MkNodRequest) Reset() {
	*x = MkNodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MkNodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MkNodRequest) ProtoMessage() {}

func (x *MkNodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MkNodRequest.ProtoReflect.Descriptor instead.
func (*MkNodRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{12}
}

func (x *MkNodRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type MkNodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,2,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *MkNodResponse) Reset() {
	*x = MkNodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MkNodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MkNodResponse) ProtoMessage() {}

func (x *MkNodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MkNodResponse.ProtoReflect.Descriptor instead.
func (*MkNodResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{13}
}

func (x *MkNodResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *MkNodResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type FileOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FileOpenRequest) Reset() {
	*x = FileOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOpenRequest) ProtoMessage() {}

func (x *FileOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOpenRequest.ProtoReflect.Descriptor instead.
func (*FileOpenRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{14}
}

func (x *FileOpenRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FileExistsRequest) Reset() {
	*x = FileExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileExistsRequest) ProtoMessage() {}

func (x *FileExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileExistsRequest.ProtoReflect.Descriptor instead.
func (*FileExistsRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{15}
}

func (x *FileExistsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists    bool       `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	Error     string     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,3,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *FileExistsResponse) Reset() {
	*x = FileExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileExistsResponse) ProtoMessage() {}

func (x *FileExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileExistsResponse.ProtoReflect.Descriptor instead.
func (*FileExistsResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{16}
}

func (x *FileExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *FileExistsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FileExistsResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type FileOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHandle int64      `protobuf:"varint,1,opt,name=fileHandle,proto3" json:"fileHandle,omitempty"`
	Error      string     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode  ErrorCodes `protobuf:"varint,3,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *FileOpenResponse) Reset() {
	*x = FileOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOpenResponse) ProtoMessage() {}

func (x *FileOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOpenResponse.ProtoReflect.Descriptor instead.
func (*FileOpenResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{17}
}

func (x *FileOpenResponse) GetFileHandle() int64 {
	if x != nil {
		return x.FileHandle
	}
	return 0
}

func (x *FileOpenResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FileOpenResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

type FileSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src  string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dest string `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
}

func (x *FileSnapshotRequest) Reset() {
	*x = FileSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSnapshotRequest) ProtoMessage() {}

func (x *FileSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSnapshotRequest.ProtoReflect.Descriptor instead.
func (*FileSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{18}
}

func (x *FileSnapshotRequest) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *FileSnapshotRequest) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

type FileSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode ErrorCodes `protobuf:"varint,3,opt,name=errorCode,proto3,enum=org.opendedup.grpc.ErrorCodes" json:"errorCode,omitempty"`
}

func (x *FileSnapshotResponse) Reset() {
	*x = FileSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IOService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSnapshotResponse) ProtoMessage() {}

func (x *FileSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_IOService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSnapshotResponse.ProtoReflect.Descriptor instead.
func (*FileSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_IOService_proto_rawDescGZIP(), []int{19}
}

func (x *FileSnapshotResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FileSnapshotResponse) GetErrorCode() ErrorCodes {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCodes_NOERR
}

var File_IOService_proto protoreflect.FileDescriptor

var file_IOService_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x49, 0x4f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x65,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x22,
	0x0a, 0x0c, 0x4d, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x63, 0x0a, 0x0d, 0x4d, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x6d, 0x44, 0x69, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x63, 0x0a, 0x0d, 0x52,
	0x6d, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x23, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x64, 0x0a, 0x0e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x0f, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x67, 0x0a, 0x11, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x4d, 0x6b, 0x4e, 0x6f, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x63, 0x0a, 0x0d, 0x4d, 0x6b, 0x4e, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x3c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x25, 0x0a,
	0x0f, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0x27, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x80, 0x01,
	0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x86, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3b, 0x0a, 0x13, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x72, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x32, 0x8a, 0x08, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x4f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x4d, 0x6b, 0x44, 0x69, 0x72, 0x12, 0x20, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x4d, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x52, 0x6d, 0x44, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x6d, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x6d, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x23, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x07, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x4d, 0x6b, 0x6e, 0x6f, 0x64, 0x12, 0x20, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x6b, 0x4e, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x4d, 0x6b, 0x4e, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x23, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x23, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x27,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x08, 0x4d, 0x6b, 0x44, 0x69, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4d, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x4d, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x32, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x75, 0x70, 0x2f, 0x73, 0x64, 0x66, 0x73, 0x2d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x64, 0x66, 0x73, 0x2f, 0x3b, 0x73,
	0x64, 0x66, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_IOService_proto_rawDescOnce sync.Once
	file_IOService_proto_rawDescData = file_IOService_proto_rawDesc
)

func file_IOService_proto_rawDescGZIP() []byte {
	file_IOService_proto_rawDescOnce.Do(func() {
		file_IOService_proto_rawDescData = protoimpl.X.CompressGZIP(file_IOService_proto_rawDescData)
	})
	return file_IOService_proto_rawDescData
}

var file_IOService_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_IOService_proto_goTypes = []interface{}{
	(*DataWriteRequest)(nil),     // 0: org.opendedup.grpc.DataWriteRequest
	(*DataWriteResponse)(nil),    // 1: org.opendedup.grpc.DataWriteResponse
	(*MkDirRequest)(nil),         // 2: org.opendedup.grpc.MkDirRequest
	(*MkDirResponse)(nil),        // 3: org.opendedup.grpc.MkDirResponse
	(*RmDirRequest)(nil),         // 4: org.opendedup.grpc.RmDirRequest
	(*RmDirResponse)(nil),        // 5: org.opendedup.grpc.RmDirResponse
	(*UnlinkRequest)(nil),        // 6: org.opendedup.grpc.UnlinkRequest
	(*UnlinkResponse)(nil),       // 7: org.opendedup.grpc.UnlinkResponse
	(*DataReadRequest)(nil),      // 8: org.opendedup.grpc.DataReadRequest
	(*DataReadResponse)(nil),     // 9: org.opendedup.grpc.DataReadResponse
	(*FileCloseRequest)(nil),     // 10: org.opendedup.grpc.FileCloseRequest
	(*FileCloseResponse)(nil),    // 11: org.opendedup.grpc.FileCloseResponse
	(*MkNodRequest)(nil),         // 12: org.opendedup.grpc.MkNodRequest
	(*MkNodResponse)(nil),        // 13: org.opendedup.grpc.MkNodResponse
	(*FileOpenRequest)(nil),      // 14: org.opendedup.grpc.FileOpenRequest
	(*FileExistsRequest)(nil),    // 15: org.opendedup.grpc.FileExistsRequest
	(*FileExistsResponse)(nil),   // 16: org.opendedup.grpc.FileExistsResponse
	(*FileOpenResponse)(nil),     // 17: org.opendedup.grpc.FileOpenResponse
	(*FileSnapshotRequest)(nil),  // 18: org.opendedup.grpc.FileSnapshotRequest
	(*FileSnapshotResponse)(nil), // 19: org.opendedup.grpc.FileSnapshotResponse
	(ErrorCodes)(0),              // 20: org.opendedup.grpc.errorCodes
	(*FileInfoRequest)(nil),      // 21: org.opendedup.grpc.FileInfoRequest
	(*FileMessageResponse)(nil),  // 22: org.opendedup.grpc.FileMessageResponse
}
var file_IOService_proto_depIdxs = []int32{
	20, // 0: org.opendedup.grpc.DataWriteResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 1: org.opendedup.grpc.MkDirResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 2: org.opendedup.grpc.RmDirResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 3: org.opendedup.grpc.UnlinkResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 4: org.opendedup.grpc.DataReadResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 5: org.opendedup.grpc.FileCloseResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 6: org.opendedup.grpc.MkNodResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 7: org.opendedup.grpc.FileExistsResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 8: org.opendedup.grpc.FileOpenResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	20, // 9: org.opendedup.grpc.FileSnapshotResponse.errorCode:type_name -> org.opendedup.grpc.errorCodes
	2,  // 10: org.opendedup.grpc.FileIOService.MkDir:input_type -> org.opendedup.grpc.MkDirRequest
	4,  // 11: org.opendedup.grpc.FileIOService.RmDir:input_type -> org.opendedup.grpc.RmDirRequest
	6,  // 12: org.opendedup.grpc.FileIOService.Unlink:input_type -> org.opendedup.grpc.UnlinkRequest
	0,  // 13: org.opendedup.grpc.FileIOService.Write:input_type -> org.opendedup.grpc.DataWriteRequest
	8,  // 14: org.opendedup.grpc.FileIOService.Read:input_type -> org.opendedup.grpc.DataReadRequest
	10, // 15: org.opendedup.grpc.FileIOService.Release:input_type -> org.opendedup.grpc.FileCloseRequest
	12, // 16: org.opendedup.grpc.FileIOService.Mknod:input_type -> org.opendedup.grpc.MkNodRequest
	14, // 17: org.opendedup.grpc.FileIOService.Open:input_type -> org.opendedup.grpc.FileOpenRequest
	21, // 18: org.opendedup.grpc.FileIOService.GetFileInfo:input_type -> org.opendedup.grpc.FileInfoRequest
	18, // 19: org.opendedup.grpc.FileIOService.CreateCopy:input_type -> org.opendedup.grpc.FileSnapshotRequest
	15, // 20: org.opendedup.grpc.FileIOService.FileExists:input_type -> org.opendedup.grpc.FileExistsRequest
	2,  // 21: org.opendedup.grpc.FileIOService.MkDirAll:input_type -> org.opendedup.grpc.MkDirRequest
	3,  // 22: org.opendedup.grpc.FileIOService.MkDir:output_type -> org.opendedup.grpc.MkDirResponse
	5,  // 23: org.opendedup.grpc.FileIOService.RmDir:output_type -> org.opendedup.grpc.RmDirResponse
	7,  // 24: org.opendedup.grpc.FileIOService.Unlink:output_type -> org.opendedup.grpc.UnlinkResponse
	1,  // 25: org.opendedup.grpc.FileIOService.Write:output_type -> org.opendedup.grpc.DataWriteResponse
	9,  // 26: org.opendedup.grpc.FileIOService.Read:output_type -> org.opendedup.grpc.DataReadResponse
	11, // 27: org.opendedup.grpc.FileIOService.Release:output_type -> org.opendedup.grpc.FileCloseResponse
	13, // 28: org.opendedup.grpc.FileIOService.Mknod:output_type -> org.opendedup.grpc.MkNodResponse
	17, // 29: org.opendedup.grpc.FileIOService.Open:output_type -> org.opendedup.grpc.FileOpenResponse
	22, // 30: org.opendedup.grpc.FileIOService.GetFileInfo:output_type -> org.opendedup.grpc.FileMessageResponse
	19, // 31: org.opendedup.grpc.FileIOService.CreateCopy:output_type -> org.opendedup.grpc.FileSnapshotResponse
	16, // 32: org.opendedup.grpc.FileIOService.FileExists:output_type -> org.opendedup.grpc.FileExistsResponse
	3,  // 33: org.opendedup.grpc.FileIOService.MkDirAll:output_type -> org.opendedup.grpc.MkDirResponse
	22, // [22:34] is the sub-list for method output_type
	10, // [10:22] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_IOService_proto_init() }
func file_IOService_proto_init() {
	if File_IOService_proto != nil {
		return
	}
	file_FileInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_IOService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataWriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataWriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MkDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MkDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MkNodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MkNodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IOService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_IOService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_IOService_proto_goTypes,
		DependencyIndexes: file_IOService_proto_depIdxs,
		MessageInfos:      file_IOService_proto_msgTypes,
	}.Build()
	File_IOService_proto = out.File
	file_IOService_proto_rawDesc = nil
	file_IOService_proto_goTypes = nil
	file_IOService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileIOServiceClient is the client API for FileIOService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileIOServiceClient interface {
	// Define a RPC operation
	MkDir(ctx context.Context, in *MkDirRequest, opts ...grpc.CallOption) (*MkDirResponse, error)
	RmDir(ctx context.Context, in *RmDirRequest, opts ...grpc.CallOption) (*RmDirResponse, error)
	Unlink(ctx context.Context, in *UnlinkRequest, opts ...grpc.CallOption) (*UnlinkResponse, error)
	Write(ctx context.Context, in *DataWriteRequest, opts ...grpc.CallOption) (*DataWriteResponse, error)
	Read(ctx context.Context, in *DataReadRequest, opts ...grpc.CallOption) (*DataReadResponse, error)
	Release(ctx context.Context, in *FileCloseRequest, opts ...grpc.CallOption) (*FileCloseResponse, error)
	Mknod(ctx context.Context, in *MkNodRequest, opts ...grpc.CallOption) (*MkNodResponse, error)
	Open(ctx context.Context, in *FileOpenRequest, opts ...grpc.CallOption) (*FileOpenResponse, error)
	GetFileInfo(ctx context.Context, in *FileInfoRequest, opts ...grpc.CallOption) (*FileMessageResponse, error)
	CreateCopy(ctx context.Context, in *FileSnapshotRequest, opts ...grpc.CallOption) (*FileSnapshotResponse, error)
	FileExists(ctx context.Context, in *FileExistsRequest, opts ...grpc.CallOption) (*FileExistsResponse, error)
	MkDirAll(ctx context.Context, in *MkDirRequest, opts ...grpc.CallOption) (*MkDirResponse, error)
}

type fileIOServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileIOServiceClient(cc grpc.ClientConnInterface) FileIOServiceClient {
	return &fileIOServiceClient{cc}
}

func (c *fileIOServiceClient) MkDir(ctx context.Context, in *MkDirRequest, opts ...grpc.CallOption) (*MkDirResponse, error) {
	out := new(MkDirResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/MkDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) RmDir(ctx context.Context, in *RmDirRequest, opts ...grpc.CallOption) (*RmDirResponse, error) {
	out := new(RmDirResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/RmDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) Unlink(ctx context.Context, in *UnlinkRequest, opts ...grpc.CallOption) (*UnlinkResponse, error) {
	out := new(UnlinkResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/Unlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) Write(ctx context.Context, in *DataWriteRequest, opts ...grpc.CallOption) (*DataWriteResponse, error) {
	out := new(DataWriteResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) Read(ctx context.Context, in *DataReadRequest, opts ...grpc.CallOption) (*DataReadResponse, error) {
	out := new(DataReadResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) Release(ctx context.Context, in *FileCloseRequest, opts ...grpc.CallOption) (*FileCloseResponse, error) {
	out := new(FileCloseResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/Release", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) Mknod(ctx context.Context, in *MkNodRequest, opts ...grpc.CallOption) (*MkNodResponse, error) {
	out := new(MkNodResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/Mknod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) Open(ctx context.Context, in *FileOpenRequest, opts ...grpc.CallOption) (*FileOpenResponse, error) {
	out := new(FileOpenResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) GetFileInfo(ctx context.Context, in *FileInfoRequest, opts ...grpc.CallOption) (*FileMessageResponse, error) {
	out := new(FileMessageResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/GetFileInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) CreateCopy(ctx context.Context, in *FileSnapshotRequest, opts ...grpc.CallOption) (*FileSnapshotResponse, error) {
	out := new(FileSnapshotResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/CreateCopy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) FileExists(ctx context.Context, in *FileExistsRequest, opts ...grpc.CallOption) (*FileExistsResponse, error) {
	out := new(FileExistsResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/FileExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileIOServiceClient) MkDirAll(ctx context.Context, in *MkDirRequest, opts ...grpc.CallOption) (*MkDirResponse, error) {
	out := new(MkDirResponse)
	err := c.cc.Invoke(ctx, "/org.opendedup.grpc.FileIOService/MkDirAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileIOServiceServer is the server API for FileIOService service.
type FileIOServiceServer interface {
	// Define a RPC operation
	MkDir(context.Context, *MkDirRequest) (*MkDirResponse, error)
	RmDir(context.Context, *RmDirRequest) (*RmDirResponse, error)
	Unlink(context.Context, *UnlinkRequest) (*UnlinkResponse, error)
	Write(context.Context, *DataWriteRequest) (*DataWriteResponse, error)
	Read(context.Context, *DataReadRequest) (*DataReadResponse, error)
	Release(context.Context, *FileCloseRequest) (*FileCloseResponse, error)
	Mknod(context.Context, *MkNodRequest) (*MkNodResponse, error)
	Open(context.Context, *FileOpenRequest) (*FileOpenResponse, error)
	GetFileInfo(context.Context, *FileInfoRequest) (*FileMessageResponse, error)
	CreateCopy(context.Context, *FileSnapshotRequest) (*FileSnapshotResponse, error)
	FileExists(context.Context, *FileExistsRequest) (*FileExistsResponse, error)
	MkDirAll(context.Context, *MkDirRequest) (*MkDirResponse, error)
}

// UnimplementedFileIOServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileIOServiceServer struct {
}

func (*UnimplementedFileIOServiceServer) MkDir(context.Context, *MkDirRequest) (*MkDirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MkDir not implemented")
}
func (*UnimplementedFileIOServiceServer) RmDir(context.Context, *RmDirRequest) (*RmDirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RmDir not implemented")
}
func (*UnimplementedFileIOServiceServer) Unlink(context.Context, *UnlinkRequest) (*UnlinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unlink not implemented")
}
func (*UnimplementedFileIOServiceServer) Write(context.Context, *DataWriteRequest) (*DataWriteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedFileIOServiceServer) Read(context.Context, *DataReadRequest) (*DataReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedFileIOServiceServer) Release(context.Context, *FileCloseRequest) (*FileCloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Release not implemented")
}
func (*UnimplementedFileIOServiceServer) Mknod(context.Context, *MkNodRequest) (*MkNodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mknod not implemented")
}
func (*UnimplementedFileIOServiceServer) Open(context.Context, *FileOpenRequest) (*FileOpenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}
func (*UnimplementedFileIOServiceServer) GetFileInfo(context.Context, *FileInfoRequest) (*FileMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFileInfo not implemented")
}
func (*UnimplementedFileIOServiceServer) CreateCopy(context.Context, *FileSnapshotRequest) (*FileSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCopy not implemented")
}
func (*UnimplementedFileIOServiceServer) FileExists(context.Context, *FileExistsRequest) (*FileExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileExists not implemented")
}
func (*UnimplementedFileIOServiceServer) MkDirAll(context.Context, *MkDirRequest) (*MkDirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MkDirAll not implemented")
}

func RegisterFileIOServiceServer(s *grpc.Server, srv FileIOServiceServer) {
	s.RegisterService(&_FileIOService_serviceDesc, srv)
}

func _FileIOService_MkDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).MkDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/MkDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).MkDir(ctx, req.(*MkDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_RmDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RmDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).RmDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/RmDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).RmDir(ctx, req.(*RmDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_Unlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).Unlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/Unlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).Unlink(ctx, req.(*UnlinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataWriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).Write(ctx, req.(*DataWriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).Read(ctx, req.(*DataReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_Release_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileCloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).Release(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/Release",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).Release(ctx, req.(*FileCloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_Mknod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkNodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).Mknod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/Mknod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).Mknod(ctx, req.(*MkNodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileOpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).Open(ctx, req.(*FileOpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_GetFileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).GetFileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/GetFileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).GetFileInfo(ctx, req.(*FileInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_CreateCopy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).CreateCopy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/CreateCopy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).CreateCopy(ctx, req.(*FileSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_FileExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).FileExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/FileExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).FileExists(ctx, req.(*FileExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileIOService_MkDirAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileIOServiceServer).MkDirAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.opendedup.grpc.FileIOService/MkDirAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileIOServiceServer).MkDirAll(ctx, req.(*MkDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileIOService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "org.opendedup.grpc.FileIOService",
	HandlerType: (*FileIOServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MkDir",
			Handler:    _FileIOService_MkDir_Handler,
		},
		{
			MethodName: "RmDir",
			Handler:    _FileIOService_RmDir_Handler,
		},
		{
			MethodName: "Unlink",
			Handler:    _FileIOService_Unlink_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _FileIOService_Write_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _FileIOService_Read_Handler,
		},
		{
			MethodName: "Release",
			Handler:    _FileIOService_Release_Handler,
		},
		{
			MethodName: "Mknod",
			Handler:    _FileIOService_Mknod_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _FileIOService_Open_Handler,
		},
		{
			MethodName: "GetFileInfo",
			Handler:    _FileIOService_GetFileInfo_Handler,
		},
		{
			MethodName: "CreateCopy",
			Handler:    _FileIOService_CreateCopy_Handler,
		},
		{
			MethodName: "FileExists",
			Handler:    _FileIOService_FileExists_Handler,
		},
		{
			MethodName: "MkDirAll",
			Handler:    _FileIOService_MkDirAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "IOService.proto",
}
